#!/usr/bin/env node

var argv = require('minimist')(process.argv.slice(2));
var path = require('path');
var findup = require('findup-sync');
require('colors');

var entry = require(path.join('..', 'src', 'entry'));

// If a .env or entry.json file is specified via CLI option we will use that.
// If not we will look in directories starting from the CWD up.
var env = typeof argv.env === 'string' ?
  path.resolve(argv.env) :
  findup('.env');

var childProcesses = typeof argv.config === 'string' ?
  path.resolve(argv.config) :
  findup('entry.json');

console.log('\nenv:\t%s\nconfig:\t%s\n', env, childProcesses);

// If the provided path didn't exist, or we failed to find the relevant file in
// any ancestor directories, we can't continue.
if ( !childProcesses ) {
  console.error('Unable to find local entry.json\n'.red);
  process.exit(1);
}

// Import the Entry configuration file (which is just JSON so using require
// here results in the parsed object).
childProcesses = require(childProcesses);

try {
  entry(childProcesses, env);
} catch ( e ) {
  console.error(('Error: ' +  e.message).red);
  process.exit(1);
}
